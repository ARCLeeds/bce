# We run this bootstrap script as $BCE_USER. Otherwise if we were to run
# separate conda invocations within separate sudos, the "activate" will only
# exist as long as sudo's subshell.

function manual_install_conda_packages() {

	# Not available yet
	echo "BCE: Installing packages with conda pipbuild..."
	for pv in \
		singledispatch==3.4.0.3 \
		rpy2==2.5.6 \
		ipythonblocks==1.7.0 \
		chardet==2.3.0 \
		; do
		p=${pv/==*/}
		v=${pv/*==/}

		conda pipbuild --no-binstar-upload ${p}	--release ${v}
		conda install --yes --use-local ${pv}
	done && \
	echo "  DONE" || echo "  FAIL"

	# These do not pipbuild cleanly
	PIPINSTALL="sklearn-pandas==0.0.9"

	for pi in ${PIPINSTALL} ; do
		pip install ${pi}
	done
}

# Main
url="http://repo.continuum.io/miniconda/Miniconda-3.9.1-Linux-x86_64.sh"
install_script="$(basename ${url})"

if [ ! -f /tmp/${install_script} ]; then
	echo "BCE: Download ${install_script}..."
	curl -o /tmp/${install_script} "${url}" && \
	echo "  DONE" || echo "  FAIL"
fi

echo "BCE: Install ${install_script}..."
bash /tmp/${install_script} -b && \
echo "  DONE" || echo "  FAIL"

# We default to Anaconda. 
echo "BCE: Prepending miniconda to PATH..."
(
	echo
	echo '# BCE: Added by bootstrap'
	echo 'export PATH=${HOME}/miniconda/bin:${PATH}'
) | tee -a ${HOME}/.bashrc ${HOME}/.profile

source ${HOME}/miniconda/bin/activate ${HOME}/miniconda

# These can only be in the root environment
conda install --yes conda==3.11.0 conda-build==1.12 conda-env==2.1.4
echo "BCE: Installing packages with conda..."
conda install --yes $(cat /tmp/packages/conda-requirements-py27.txt) && \
echo "  DONE" || echo "  FAIL"

conda create --yes -n py34 python=3.4 && \
source activate py34
echo "BCE: Installing packages with conda..."
conda install --yes $(cat /tmp/packages/conda-requirements-py34.txt) && \
echo "  DONE" || echo "  FAIL"

manual_install_conda_packages
